// Generated by Xata Codegen 0.25.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "contacts",
    columns: [
      { name: "first_name", type: "string" },
      {
        name: "last_name",
        type: "string",
        notNull: true,
        defaultValue: "Smith",
      },
      {
        name: "phone_number",
        type: "string",
        notNull: true,
        defaultValue: "+23057746010",
      },
      { name: "email", type: "email" },
      { name: "image_url", type: "string" },
    ],
    revLinks: [
      { column: "customer_id", table: "customers_pants_measurements" },
      { column: "customer_id", table: "customers_shirts_measurements" },
      { column: "contact", table: "orders" },
    ],
  },
  {
    name: "customers_pants_measurements",
    columns: [
      { name: "customer_id", type: "link", link: { table: "contacts" } },
      { name: "Waist", type: "int" },
      { name: "Hip", type: "int" },
      { name: "Length", type: "int" },
      { name: "Knee", type: "int" },
      { name: "Bottom", type: "int" },
      { name: "Genou", type: "int" },
      { name: "FR", type: "int" },
      { name: "Jambe", type: "int" },
      { name: "Mollet", type: "int" },
      { name: "Plis", type: "bool" },
      { name: "Revers", type: "bool" },
      { name: "Buckle", type: "bool" },
      { name: "date_added", type: "string" },
    ],
  },
  {
    name: "customers_shirts_measurements",
    columns: [
      { name: "customer_id", type: "link", link: { table: "contacts" } },
      { name: "Collar", type: "int" },
      { name: "XB", type: "int" },
      { name: "Chest", type: "int" },
      { name: "Waist", type: "int" },
      { name: "Length", type: "int" },
      { name: "Sleeve_length", type: "int" },
      { name: "Around_arm", type: "int" },
      { name: "date_added", type: "string" },
    ],
  },
  {
    name: "orders",
    columns: [
      { name: "contact", type: "link", link: { table: "contacts" } },
      { name: "order_name", type: "text" },
      { name: "cloth_reference", type: "link", link: { table: "cloth" } },
      { name: "notes", type: "text" },
      { name: "quantity", type: "int", notNull: true, defaultValue: "1" },
      { name: "color", type: "string" },
      { name: "price", type: "float", notNull: true, defaultValue: "1" },
    ],
    revLinks: [{ column: "related_order", table: "order_details" }],
  },
  {
    name: "cloth",
    columns: [],
    revLinks: [{ column: "cloth_reference", table: "orders" }],
  },
  {
    name: "order_type",
    columns: [{ name: "type_name", type: "string" }],
    revLinks: [{ column: "order_type", table: "order_details" }],
  },
  {
    name: "order_details",
    columns: [
      { name: "related_order", type: "link", link: { table: "orders" } },
      { name: "order_type", type: "link", link: { table: "order_type" } },
      { name: "option_name", type: "text" },
      { name: "option_value", type: "text" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Contacts = InferredTypes["contacts"];
export type ContactsRecord = Contacts & XataRecord;

export type CustomersPantsMeasurements =
  InferredTypes["customers_pants_measurements"];
export type CustomersPantsMeasurementsRecord = CustomersPantsMeasurements &
  XataRecord;

export type CustomersShirtsMeasurements =
  InferredTypes["customers_shirts_measurements"];
export type CustomersShirtsMeasurementsRecord = CustomersShirtsMeasurements &
  XataRecord;

export type Orders = InferredTypes["orders"];
export type OrdersRecord = Orders & XataRecord;

export type Cloth = InferredTypes["cloth"];
export type ClothRecord = Cloth & XataRecord;

export type OrderType = InferredTypes["order_type"];
export type OrderTypeRecord = OrderType & XataRecord;

export type OrderDetails = InferredTypes["order_details"];
export type OrderDetailsRecord = OrderDetails & XataRecord;

export type DatabaseSchema = {
  contacts: ContactsRecord;
  customers_pants_measurements: CustomersPantsMeasurementsRecord;
  customers_shirts_measurements: CustomersShirtsMeasurementsRecord;
  orders: OrdersRecord;
  cloth: ClothRecord;
  order_type: OrderTypeRecord;
  order_details: OrderDetailsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Vivek-Bhaugeerutty-s-workspace-jaj0p1.eu-central-1.xata.sh/db/contacts-directory",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
